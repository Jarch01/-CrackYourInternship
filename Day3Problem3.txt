//You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.

//Merge nums1 and nums2 into a single array sorted in non-decreasing order.

//The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int ans[] = new int[m+n];   //Array to store the final sorted array
        int i=0,j=0,k=0;
        while(i<m&&j<n)
        {
            if(nums1[i]<nums2[j])     //copying the element of nums1 to ans array
                ans[k++]=nums1[i++];
            else
                if(nums1[i]>nums2[j])   //copying the element of nums2 to ans array
                    ans[k++]=nums2[j++];
            else
            {
                ans[k++]=nums1[i++];     //If both are equal then both are copied to answer array
                ans[k++]=nums2[j++];
            }
        }
        while(i<m)
            ans[k++]=nums1[i++];    //If there are remaining elements in nums1 then copying them to ans array
        while(j<n)
            ans[k++]=nums2[j++];    //If there are remaining elements in nums2 then copying them to ans array
        for(i=0;i<m+n;i++)
            nums1[i]=ans[i];    //Initialise the nums1 array with the ans array
    }
}
