/*Given the root of a binary tree, return the length of the diameter of the tree.

The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

The length of a path between two nodes is represented by the number of edges between them.*/

class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        int[] diameter = new int[1];
        int demo = height(root, diameter);  //Diameter array to pass by reference
        return diameter[0];
    }
    
    private int height(TreeNode node, int[] diameter) {
        if (node == null) {
            return 0;
        }
        
        int lh = height(node.left, diameter);
        int rh = height(node.right, diameter);
        diameter[0] = Math.max(diameter[0], lh + rh);  //Calculating the diameter based on max value of right height + left height
        
        return 1 + Math.max(lh, rh); //Passing the depth of the cuurent node
    }
}
