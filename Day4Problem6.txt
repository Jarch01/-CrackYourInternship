//You are given an integer array prices where prices[i] is the price of a given stock on the ith day, and an integer k.

//Find the maximum profit you can achieve. You may complete at most k transactions.

class Solution {
    public int maxProfit(int k, int[] prices) {
      int ans=BuySell(prices,0,k,0,new HashMap<String,Integer>());
        return ans;
    }
    public int BuySell(int []p,int ci,int tran,int check,HashMap<String,Integer>memo)
    {
        if(ci==p.length)  //If end of the array is reached
            return 0;
        if(tran==0)     //If no more transaction possible
            return 0;
        String key=ci+"-"+tran+"-"+check;
        if(memo.containsKey(key))
            return memo.get(key);
        int NoTrans=BuySell(p,ci+1,tran,check,memo);   //Path for no transaction
        int Trans;
        if(check==0)
            Trans=-p[ci]+BuySell(p,ci+1,tran,1,memo);  //Path for transaction for buying
        else
            Trans=p[ci]+BuySell(p,ci+1,tran-1,0,memo);  //Path for transaction for selling
        int Profit=Math.max(NoTrans,Trans);
        memo.put(key,Profit);
        return Profit;
    }
}
